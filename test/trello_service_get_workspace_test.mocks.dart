// Mocks generated by Mockito 5.4.5 from annotations
// in untitled/test/trello_service_get_workspace_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:untitled/models/board.dart' as _i7;
import 'package:untitled/models/card.dart' as _i4;
import 'package:untitled/models/list.dart' as _i3;
import 'package:untitled/models/workspace_model.dart' as _i2;
import 'package:untitled/services/trello_service.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWorkspace_0 extends _i1.SmartFake implements _i2.Workspace {
  _FakeWorkspace_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTrelloList_1 extends _i1.SmartFake implements _i3.TrelloList {
  _FakeTrelloList_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTrelloCard_2 extends _i1.SmartFake implements _i4.TrelloCard {
  _FakeTrelloCard_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [TrelloService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTrelloService extends _i1.Mock implements _i5.TrelloService {
  MockTrelloService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i2.Workspace>> getAllWorkspace() =>
      (super.noSuchMethod(
            Invocation.method(#getAllWorkspace, []),
            returnValue: _i6.Future<List<_i2.Workspace>>.value(
              <_i2.Workspace>[],
            ),
          )
          as _i6.Future<List<_i2.Workspace>>);

  @override
  dynamic addCard(String? listId, String? text, String? text2) =>
      super.noSuchMethod(Invocation.method(#addCard, [listId, text, text2]));

  @override
  dynamic fetchLists(String? boardId) =>
      super.noSuchMethod(Invocation.method(#fetchLists, [boardId]));

  @override
  dynamic fectchCards(String? listId) =>
      super.noSuchMethod(Invocation.method(#fectchCards, [listId]));

  @override
  _i6.Future<_i2.Workspace> createWorkspace(String? name) =>
      (super.noSuchMethod(
            Invocation.method(#createWorkspace, [name]),
            returnValue: _i6.Future<_i2.Workspace>.value(
              _FakeWorkspace_0(
                this,
                Invocation.method(#createWorkspace, [name]),
              ),
            ),
          )
          as _i6.Future<_i2.Workspace>);

  @override
  _i6.Future<void> deleteWorkspace(String? workspaceId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteWorkspace, [workspaceId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateWorkspace(String? workspaceId, String? newName) =>
      (super.noSuchMethod(
            Invocation.method(#updateWorkspace, [workspaceId, newName]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<List<_i4.Member>> getMembers(String? workspaceId) =>
      (super.noSuchMethod(
            Invocation.method(#getMembers, [workspaceId]),
            returnValue: _i6.Future<List<_i4.Member>>.value(<_i4.Member>[]),
          )
          as _i6.Future<List<_i4.Member>>);

  @override
  _i6.Future<List<_i4.Member>> createMembers(
    String? workspaceId,
    String? fullName,
    String? username,
    String? email,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createMembers, [
              workspaceId,
              fullName,
              username,
              email,
            ]),
            returnValue: _i6.Future<List<_i4.Member>>.value(<_i4.Member>[]),
          )
          as _i6.Future<List<_i4.Member>>);

  @override
  _i6.Future<List<_i4.Member>> deleteMembers(
    String? workspaceId,
    String? memberId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#deleteMembers, [workspaceId, memberId]),
            returnValue: _i6.Future<List<_i4.Member>>.value(<_i4.Member>[]),
          )
          as _i6.Future<List<_i4.Member>>);

  @override
  _i6.Future<List<_i4.Member>> updateMembers(
    String? workspaceId,
    String? memberId,
    String? newName,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateMembers, [workspaceId, memberId, newName]),
            returnValue: _i6.Future<List<_i4.Member>>.value(<_i4.Member>[]),
          )
          as _i6.Future<List<_i4.Member>>);

  @override
  _i6.Future<List<_i3.TrelloList>> getAllLists(String? boardId) =>
      (super.noSuchMethod(
            Invocation.method(#getAllLists, [boardId]),
            returnValue: _i6.Future<List<_i3.TrelloList>>.value(
              <_i3.TrelloList>[],
            ),
          )
          as _i6.Future<List<_i3.TrelloList>>);

  @override
  _i6.Future<_i3.TrelloList> createList(String? boardId, String? name) =>
      (super.noSuchMethod(
            Invocation.method(#createList, [boardId, name]),
            returnValue: _i6.Future<_i3.TrelloList>.value(
              _FakeTrelloList_1(
                this,
                Invocation.method(#createList, [boardId, name]),
              ),
            ),
          )
          as _i6.Future<_i3.TrelloList>);

  @override
  _i6.Future<void> deleteList(String? boardId, String? listId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteList, [boardId, listId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateList(String? listId, String? newName) =>
      (super.noSuchMethod(
            Invocation.method(#updateList, [listId, newName]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateListById(String? listId, String? newName) =>
      (super.noSuchMethod(
            Invocation.method(#updateListById, [listId, newName]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> archiveList(String? listId) =>
      (super.noSuchMethod(
            Invocation.method(#archiveList, [listId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<List<_i4.TrelloCard>> getAllCards(String? listId) =>
      (super.noSuchMethod(
            Invocation.method(#getAllCards, [listId]),
            returnValue: _i6.Future<List<_i4.TrelloCard>>.value(
              <_i4.TrelloCard>[],
            ),
          )
          as _i6.Future<List<_i4.TrelloCard>>);

  @override
  _i6.Future<List<_i4.TrelloCard>> fetchCards(String? listId) =>
      (super.noSuchMethod(
            Invocation.method(#fetchCards, [listId]),
            returnValue: _i6.Future<List<_i4.TrelloCard>>.value(
              <_i4.TrelloCard>[],
            ),
          )
          as _i6.Future<List<_i4.TrelloCard>>);

  @override
  _i6.Future<List<_i4.TrelloCard>> createCardForList(
    String? listId,
    String? name,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createCardForList, [listId, name]),
            returnValue: _i6.Future<List<_i4.TrelloCard>>.value(
              <_i4.TrelloCard>[],
            ),
          )
          as _i6.Future<List<_i4.TrelloCard>>);

  @override
  _i6.Future<_i4.TrelloCard> createCard(
    String? listId,
    String? name,
    String? desc,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createCard, [listId, name, desc]),
            returnValue: _i6.Future<_i4.TrelloCard>.value(
              _FakeTrelloCard_2(
                this,
                Invocation.method(#createCard, [listId, name, desc]),
              ),
            ),
          )
          as _i6.Future<_i4.TrelloCard>);

  @override
  _i6.Future<List<_i4.TrelloCard>> deleteCardFromList(
    String? listId,
    String? cardId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#deleteCardFromList, [listId, cardId]),
            returnValue: _i6.Future<List<_i4.TrelloCard>>.value(
              <_i4.TrelloCard>[],
            ),
          )
          as _i6.Future<List<_i4.TrelloCard>>);

  @override
  _i6.Future<void> deleteCard(String? cardId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteCard, [cardId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<List<_i4.TrelloCard>> updateCardInList(
    String? listId,
    String? cardId,
    String? newName,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateCardInList, [listId, cardId, newName]),
            returnValue: _i6.Future<List<_i4.TrelloCard>>.value(
              <_i4.TrelloCard>[],
            ),
          )
          as _i6.Future<List<_i4.TrelloCard>>);

  @override
  _i6.Future<void> updateCard(
    String? cardId,
    String? newName,
    String? newDesc,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateCard, [cardId, newName, newDesc]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> assignMemberToCard(String? cardId, String? memberId) =>
      (super.noSuchMethod(
            Invocation.method(#assignMemberToCard, [cardId, memberId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> removeMemberFromCard(String? cardId, String? memberId) =>
      (super.noSuchMethod(
            Invocation.method(#removeMemberFromCard, [cardId, memberId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<List<_i7.Board>> getAllBoards() =>
      (super.noSuchMethod(
            Invocation.method(#getAllBoards, []),
            returnValue: _i6.Future<List<_i7.Board>>.value(<_i7.Board>[]),
          )
          as _i6.Future<List<_i7.Board>>);

  @override
  _i6.Future<void> createBoard(String? name, String? workspaceId) =>
      (super.noSuchMethod(
            Invocation.method(#createBoard, [name, workspaceId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> deleteBoard(String? boardId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteBoard, [boardId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateBoard(String? boardId, String? newName) =>
      (super.noSuchMethod(
            Invocation.method(#updateBoard, [boardId, newName]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<List<_i4.Member>> getCardMembers(String? cardId) =>
      (super.noSuchMethod(
            Invocation.method(#getCardMembers, [cardId]),
            returnValue: _i6.Future<List<_i4.Member>>.value(<_i4.Member>[]),
          )
          as _i6.Future<List<_i4.Member>>);

  @override
  _i6.Future<List<_i4.Member>> getCardMembersById(String? cardId) =>
      (super.noSuchMethod(
            Invocation.method(#getCardMembersById, [cardId]),
            returnValue: _i6.Future<List<_i4.Member>>.value(<_i4.Member>[]),
          )
          as _i6.Future<List<_i4.Member>>);

  @override
  _i6.Future<void> createKanbanTemplate(
    String? boardName,
    String? workspaceId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createKanbanTemplate, [boardName, workspaceId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);
}
